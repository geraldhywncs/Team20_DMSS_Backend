name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Specify your desired Python version

      - name: Install dependencies
        run: |
          pip install -r ${{ github.workspace }}/requirement.txt

      - name: Install tesseract-ocr
        run: |
          sudo apt-get install -y tesseract-ocr

      - name: Run pytest
        id: pytest
        run: |
          pytest
        continue-on-error: true

      - name: Check pytest status
        if: steps.pytest.outcome == 'failure'
        run: |
          echo "Pytest failed. Please check the test results."
          exit 1

      - name: Build Docker image
        if: ${{ success() }}
        run: |
          docker build -t dmss_python_image -f Dockerfile.python .

      - name: Configure AWS CLI
        if: ${{ success() }}
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ap-southeast-2
          
      - name: Push Docker image to ECR
        if: ${{ success() }}
        run: |
          docker tag dmss_python_image:latest 409151997352.dkr.ecr.ap-southeast-2.amazonaws.com/dmss-backend:latest
          aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 409151997352.dkr.ecr.ap-southeast-2.amazonaws.com
          docker push 409151997352.dkr.ecr.ap-southeast-2.amazonaws.com/dmss-backend:latest

      # - name: Create SSH key file
      #   run: |
      #     echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/ec2_key
      #     chmod 600 /tmp/ec2_key

      # - name: SSH into EC2 instance
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i /tmp/ec2_key ec2-user@<EC2_PUBLIC_IP>

      # - name: Authenticate Docker to AWS ECR
      #   run: |
      #     aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 409151997352.dkr.ecr.ap-southeast-2.amazonaws.com
  
      # - name: Pull Docker Image from ECR
      #   run: |
      #     docker pull 409151997352.dkr.ecr.ap-southeast-2.amazonaws.com/dmss-backend
  
      # - name: Deploy Docker Container
      #   run: |
      #     docker rm -f dmss_python_container || true
      #     docker run -d -e EC2=true --name dmss_python_container -p 5000:5000 409151997352.dkr.ecr.ap-southeast-2.amazonaws.com/dmss-backend

      - name: Cleanup
        run: docker logout
